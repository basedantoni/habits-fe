/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthenticatedImport } from './routes/_unauthenticated'
import { Route as IndexImport } from './routes/index'
import { Route as UnauthenticatedSettingsIndexImport } from './routes/_unauthenticated/settings/index'
import { Route as UnauthenticatedHabitsIndexImport } from './routes/_unauthenticated/habits/index'
import { Route as UnauthenticatedHabitsHabitIdImport } from './routes/_unauthenticated/habits/$habitId'

// Create/Update Routes

const UnauthenticatedRoute = UnauthenticatedImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedSettingsIndexRoute =
  UnauthenticatedSettingsIndexImport.update({
    path: '/settings/',
    getParentRoute: () => UnauthenticatedRoute,
  } as any)

const UnauthenticatedHabitsIndexRoute = UnauthenticatedHabitsIndexImport.update(
  {
    path: '/habits/',
    getParentRoute: () => UnauthenticatedRoute,
  } as any,
)

const UnauthenticatedHabitsHabitIdRoute =
  UnauthenticatedHabitsHabitIdImport.update({
    path: '/habits/$habitId',
    getParentRoute: () => UnauthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated/habits/$habitId': {
      id: '/_unauthenticated/habits/$habitId'
      path: '/habits/$habitId'
      fullPath: '/habits/$habitId'
      preLoaderRoute: typeof UnauthenticatedHabitsHabitIdImport
      parentRoute: typeof UnauthenticatedImport
    }
    '/_unauthenticated/habits/': {
      id: '/_unauthenticated/habits/'
      path: '/habits'
      fullPath: '/habits'
      preLoaderRoute: typeof UnauthenticatedHabitsIndexImport
      parentRoute: typeof UnauthenticatedImport
    }
    '/_unauthenticated/settings/': {
      id: '/_unauthenticated/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof UnauthenticatedSettingsIndexImport
      parentRoute: typeof UnauthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  UnauthenticatedRoute: UnauthenticatedRoute.addChildren({
    UnauthenticatedHabitsHabitIdRoute,
    UnauthenticatedHabitsIndexRoute,
    UnauthenticatedSettingsIndexRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_unauthenticated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated.tsx",
      "children": [
        "/_unauthenticated/habits/$habitId",
        "/_unauthenticated/habits/",
        "/_unauthenticated/settings/"
      ]
    },
    "/_unauthenticated/habits/$habitId": {
      "filePath": "_unauthenticated/habits/$habitId.tsx",
      "parent": "/_unauthenticated"
    },
    "/_unauthenticated/habits/": {
      "filePath": "_unauthenticated/habits/index.tsx",
      "parent": "/_unauthenticated"
    },
    "/_unauthenticated/settings/": {
      "filePath": "_unauthenticated/settings/index.tsx",
      "parent": "/_unauthenticated"
    }
  }
}
ROUTE_MANIFEST_END */
